{
  "version": 3,
  "sources": ["<stdin>", "../../app/entry.server.tsx", "../../app/root.tsx", "../../app/routes/_index.tsx", "../../app/services/getQuotes.ts", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/docs/en/main/file-conventions/entry.server\n */\n\nimport { Response } from '@remix-run/node';\nimport { RemixServer } from '@remix-run/react';\nimport isbot from 'isbot';\nimport { renderToPipeableStream } from 'react-dom/server';\nimport { PassThrough } from 'node:stream';\nimport type { EntryContext } from '@remix-run/node';\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n) {\n  return isbot(request.headers.get('user-agent'))\n    ? handleBotRequest(request, responseStatusCode, responseHeaders, remixContext)\n    : handleBrowserRequest(request, responseStatusCode, responseHeaders, remixContext);\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} abortDelay={ABORT_DELAY} />,\n      {\n        onAllReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set('Content-Type', 'text/html');\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            }),\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          console.error(error);\n        },\n      },\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} abortDelay={ABORT_DELAY} />,\n      {\n        onShellReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set('Content-Type', 'text/html');\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            }),\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          console.error(error);\n          responseStatusCode = 500;\n        },\n      },\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import { json } from '@remix-run/node';\nimport { Links, LiveReload, Meta, Outlet, Scripts, ScrollRestoration, useLoaderData } from '@remix-run/react';\nimport stylesheet from '~/tailwind.css';\nimport type { LinksFunction } from '@remix-run/node';\n\nexport const links: LinksFunction = () => [{ rel: 'stylesheet', href: stylesheet }];\n\nexport const loader = async () => {\n  return json({\n    ENV: {\n      MAIN_SERVICE_BASE_URL: process.env.MAIN_SERVICE_BASE_URL,\n    },\n  });\n};\n\nexport default function App() {\n  const data = useLoaderData<typeof loader>();\n\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <script\n          dangerouslySetInnerHTML={{\n            __html: `window.ENV = ${JSON.stringify(data.ENV)}`,\n          }}\n        />\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import { json } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { getQuotes } from '~/services/getQuotes';\nimport type { V2_MetaFunction } from '@remix-run/node';\nimport type { Quote } from '~/models/Quote';\n\nexport const meta: V2_MetaFunction = () => {\n  return [{ title: 'New Remix App' }];\n};\n\ninterface PageProps {\n  quotes: Quote[];\n}\n\nexport const loader = async () => {\n  const quotes = await getQuotes();\n  return json<PageProps>({\n    quotes,\n  });\n};\n\nexport default function Index() {\n  const { quotes } = useLoaderData<typeof loader>();\n\n  const handlePing = async () => {\n    const response = await window.electronApis.ping();\n    console.log(response);\n  };\n\n  return (\n    <div>\n      <button className=\"bg-slate-700 px-4 py-2 text-white\" onClick={handlePing}>\n        Ping\n      </button>\n      <div className=\"grid grid-cols-1 lg:grid-flow-row lg:grid-cols-3\">\n        {quotes.map((q, i) => {\n          const { quote, by } = q;\n          return (\n            <figure key={i} className=\"m-4 px-4 py-10 shadow-md shadow-sky-100\">\n              <blockquote cite=\"https://wisdomman.com\" className=\"py-3\">\n                <p className=\"text-xl  text-gray-800\">{quote}</p>\n              </blockquote>\n              <figcaption>\n                <cite className=\"mb-4 text-right text-sm text-gray-600\">- {by}</cite>\n              </figcaption>\n            </figure>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n", "import type { Quote } from '~/models/Quote';\n\nexport const getQuotes = async () => {\n  return Promise.resolve<Quote[]>([\n    {\n      quote: 'Light at the end of the tunnel, dey don cut am.',\n      by: 'Brain Jotter',\n    },\n    {\n      quote: 'Promised to stand by you, we don sit down.',\n      by: 'Brain Jotter',\n    },\n    {\n      quote: 'Polythecnic wey dey in Italy, Napoli.',\n      by: 'Comrade with wisdom and Understanding',\n    },\n  ]);\n};\n", "export default {'version':'fb0d1f3b','entry':{'module':'/build/entry.client-ADIIQCH4.js','imports':['/build/_shared/chunk-ANWLSTK2.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-CUUQQDZX.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-5YCGONNY.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'cssBundleHref':undefined,'hmr':undefined,'url':'/build/manifest-FB0D1F3B.js'};", "\nimport * as entryServer from \"/Volumes/Data/TUONG/RESEARCHING/REMIXJS/remix-learning/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/_index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"unstable_cssModules\":false,\"unstable_cssSideEffectImports\":false,\"unstable_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":true,\"unstable_vanillaExtract\":false,\"v2_errorBoundary\":true,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    }\n  };"],
  "mappings": "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",
  "names": ["isbot", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "loader"]
}
